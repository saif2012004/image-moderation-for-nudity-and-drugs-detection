name: 🔒 Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run security scans daily at 3 AM UTC
    - cron: "0 3 * * *"

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # 🔍 Python Security Scanning
  python-security:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🛡️ Run Bandit Security Scan
        run: |
          pip install bandit[toml]
          bandit -r app/ -f json -o bandit-report.json
          bandit -r app/ -f txt
        continue-on-error: true

      - name: 🔍 Safety - Dependency Vulnerability Check
        run: |
          pip install safety
          safety check --json --output safety-report.json
          safety check
        continue-on-error: true

      - name: 📤 Upload Security Reports
        uses: actions/upload-artifact@v3
        with:
          name: python-security-reports
          path: |
            bandit-report.json
            safety-report.json

      - name: 📋 Security Summary
        run: |
          echo "🔒 Python Security Scan Results:"
          echo "================================"

          if [ -f "bandit-report.json" ]; then
            echo "📊 Bandit Results:"
            python -c "
            import json
            try:
                with open('bandit-report.json', 'r') as f:
                    data = json.load(f)
                    high = len([r for r in data.get('results', []) if r.get('issue_severity') == 'HIGH'])
                    medium = len([r for r in data.get('results', []) if r.get('issue_severity') == 'MEDIUM'])
                    low = len([r for r in data.get('results', []) if r.get('issue_severity') == 'LOW'])
                    print(f'  🔴 High: {high}')
                    print(f'  🟡 Medium: {medium}')
                    print(f'  🟢 Low: {low}')
                    if high > 0:
                        print('❌ HIGH SEVERITY ISSUES FOUND!')
                        exit(1)
            except Exception as e:
                print(f'Error reading bandit report: {e}')
            "
          fi

  # 📋 Security Summary Report
  security-summary:
    runs-on: ubuntu-latest
    needs: [python-security]
    if: always()

    steps:
      - name: 📊 Generate Security Summary
        run: |
          echo "🔒 Security Scan Summary"
          echo "======================="
          echo "📅 Scan Date: $(date)"
          echo ""

          if [ "${{ needs.python-security.result }}" = "success" ]; then
            echo "✅ Python Security: PASSED"
          else
            echo "❌ Python Security: ISSUES FOUND"
          fi
